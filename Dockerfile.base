#     docker build --rm=true -t drone/arm -f Dockerfile.arm .

FROM golang:1.5

RUN echo "deb http://httpredir.debian.org/debian unstable main non-free contrib" >> /etc/apt/sources.list && \
    apt-get update && apt-get install -y cross-gcc-dev gcc-arm-linux-gnueabi bzip2 git && \
    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

ENV GO15VENDOREXPERIMENT 1
ENV GOOS linux
ENV GOARCH arm
#ENV GOARM 6
#ENV CGO_ENABLED 1

#COPY . /go/src/github.com/drone/drone
RUN mkdir -p $GOPATH/src/github.com/drone && cd $GOPATH/src/github.com/drone && \
    git clone https://github.com/gesellix/drone.git && \
    cd $GOPATH/src/github.com/drone/drone && \
    cp contrib/setup-sassc.sh /usr/local/bin/setup-sassc.sh && \
    cp contrib/setup-sqlite.sh /usr/local/bin/setup-sqlite.sh && \
    cp contrib/setup-sqlite-arm.sh /usr/local/bin/setup-sqlite-arm.sh && \
    sync && \
    chmod +x /usr/local/bin/setup-sassc.sh && \
    chmod +x /usr/local/bin/setup-sqlite.sh && \
    chmod +x /usr/local/bin/setup-sqlite-arm.sh && \
    sync && \
    /usr/local/bin/setup-sassc.sh && \
    /usr/local/bin/setup-sqlite-arm.sh
WORKDIR /go/src/github.com/drone/drone

COPY ./Makefile /go/src/github.com/drone/drone/Makefile

RUN make deps
RUN cd /go/src/github.com/elazarl/go-bindata-assetfs && go install ./... && \
    cd /go/src/github.com/jteeuwen/go-bindata && go install ./... && \
    cd /go/src/github.com/eknkc/amber && go install ./...
RUN make gen

# build without Cgo
#RUN rm -f /go/src/github.com/drone/drone/vendor/github.com/mattn/go-sqlite3/sqlite3.c && \
#    make build build_static
